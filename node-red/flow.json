[
    {
        "id": "b7153556.38f63",
        "type": "tab",
        "label": "Blanche - Accéléromètre",
        "disabled": false,
        "info": ""
    },
    {
        "id": "ef439a8e.de69d8",
        "type": "i2c in",
        "z": "b7153556.38f63",
        "name": "I2C1",
        "address": "83",
        "command": "50",
        "count": "6",
        "x": 270,
        "y": 60,
        "wires": [
            [
                "95ab0dfc.43348",
                "af400ac0.337718"
            ]
        ]
    },
    {
        "id": "baf5e795.46e9d",
        "type": "inject",
        "z": "b7153556.38f63",
        "name": "Accelerometer",
        "topic": "",
        "payload": "/dev/i2c-1",
        "payloadType": "str",
        "repeat": "0.1",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "x": 120,
        "y": 60,
        "wires": [
            [
                "ef439a8e.de69d8"
            ]
        ]
    },
    {
        "id": "95ab0dfc.43348",
        "type": "function",
        "z": "b7153556.38f63",
        "name": "publishSocketMessages",
        "func": "// TODO: Only publish when data changes ?\n\nlet gForce = 9.80665;\n\nlet x = (msg.payload[1] * 256) + msg.payload[0];\nif (msg.payload[1] > 128)\n    x = 65535 - x;\nx = Math.round(x * 4 * gForce)/1000;\n\nlet y = (msg.payload[3] * 256) + msg.payload[2];\nif (msg.payload[3] > 128)\n    y = 65535 - y;\ny = Math.round(y * 4 * gForce)/1000;\n\nlet z = (msg.payload[5] * 256) + msg.payload[4];\nif (msg.payload[5] > 128)\n    z = 65535 - z;\nz = Math.round(z * 4 * gForce)/1000;\n\n\nmsg.payload = {x: x, y: y, z: z};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 450,
        "y": 60,
        "wires": [
            [
                "f5fd8f46.d1a41"
            ]
        ]
    },
    {
        "id": "2820a183.8c5106",
        "type": "grove analog sensor",
        "z": "b7153556.38f63",
        "name": "Loudness",
        "pin": "2",
        "sensor": "sound",
        "repeat": "0.1",
        "board": "78a75072.fedf68",
        "x": 80,
        "y": 240,
        "wires": [
            [
                "2891b47c.fde94c",
                "8bb94c8e.06df28",
                "a109f55e.4899e"
            ]
        ]
    },
    {
        "id": "9251463a.202f28",
        "type": "i2c out",
        "z": "b7153556.38f63",
        "name": "",
        "address": "83",
        "command": "45",
        "payload": "8",
        "payloadType": "num",
        "count": "1",
        "x": 260,
        "y": 20,
        "wires": []
    },
    {
        "id": "3cd725ed.cdc252",
        "type": "inject",
        "z": "b7153556.38f63",
        "name": "",
        "topic": "",
        "payload": "/dev/i2c-1",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "x": 110,
        "y": 20,
        "wires": [
            [
                "9251463a.202f28"
            ]
        ]
    },
    {
        "id": "8a57a80f.843c88",
        "type": "http in",
        "z": "b7153556.38f63",
        "name": "",
        "url": "/accelerometer",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 140,
        "wires": [
            [
                "35356f6b.3b66d"
            ]
        ]
    },
    {
        "id": "35356f6b.3b66d",
        "type": "function",
        "z": "b7153556.38f63",
        "name": "GetRequest",
        "func": "msg.parts = 2;\nmsg.topic = \"2\";\nmsg.complete = true\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 290,
        "y": 140,
        "wires": [
            [
                "f7b7668.5e66218"
            ]
        ]
    },
    {
        "id": "af400ac0.337718",
        "type": "function",
        "z": "b7153556.38f63",
        "name": "JsonDisplayAccelerometer",
        "func": "var b1 = msg.payload[0];\nvar b2 = msg.payload[1];\nvar b3 = msg.payload[2];\nvar b4 = msg.payload[3];\nvar b5 = msg.payload[4];\nvar b6 = msg.payload[5];\n\nvar gForce = 9.80665;\n\nvar x = (b2 * 256) + b1;\nif (b2 > 128)\n    x = 65535 - x;\nvar y = (b4 * 256) + b3;\nif (b4 > 128)\n    y = 65535 - y;\nvar z = (b6 * 256) + b5;\nif (b6 > 128)\n    z = 65535 - z;\n\nx = Math.round(x * 4 * gForce)/1000;\ny = Math.round(y * 4 * gForce)/1000;\nz = Math.round(z * 4 * gForce)/1000;\n\nmsg.payload = {x: x, y: y, z: z};\nmsg.parts = 1;\nmsg.topic = \"1\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 460,
        "y": 100,
        "wires": [
            [
                "1a7cb89d.b40f6f"
            ]
        ]
    },
    {
        "id": "e75bfa39.f352b",
        "type": "join",
        "z": "b7153556.38f63",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "",
        "propertyType": "full",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 770,
        "y": 120,
        "wires": [
            [
                "322c900a.4b91a"
            ]
        ]
    },
    {
        "id": "1a7cb89d.b40f6f",
        "type": "json",
        "z": "b7153556.38f63",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 650,
        "y": 100,
        "wires": [
            [
                "e75bfa39.f352b"
            ]
        ]
    },
    {
        "id": "f7b7668.5e66218",
        "type": "json",
        "z": "b7153556.38f63",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 650,
        "y": 140,
        "wires": [
            [
                "e75bfa39.f352b"
            ]
        ]
    },
    {
        "id": "c57deb88.7c5c68",
        "type": "http response",
        "z": "b7153556.38f63",
        "name": "",
        "statusCode": "200",
        "headers": {
            "Content-Type": "application/json"
        },
        "x": 1020,
        "y": 120,
        "wires": []
    },
    {
        "id": "322c900a.4b91a",
        "type": "function",
        "z": "b7153556.38f63",
        "name": "",
        "func": "msg.payload = msg.payload[1].payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 890,
        "y": 120,
        "wires": [
            [
                "c57deb88.7c5c68"
            ]
        ]
    },
    {
        "id": "9cddfe3f.a91eb",
        "type": "http in",
        "z": "b7153556.38f63",
        "name": "",
        "url": "/loudness",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 320,
        "wires": [
            [
                "65921c7f.829bdc"
            ]
        ]
    },
    {
        "id": "65921c7f.829bdc",
        "type": "function",
        "z": "b7153556.38f63",
        "name": "GetRequest",
        "func": "msg.parts = 2;\nmsg.topic = \"2\";\nmsg.complete = true\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 270,
        "y": 320,
        "wires": [
            [
                "4838bf50.4b66a"
            ]
        ]
    },
    {
        "id": "a74d8921.e4deb",
        "type": "join",
        "z": "b7153556.38f63",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "",
        "propertyType": "full",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 550,
        "y": 300,
        "wires": [
            [
                "cad1b046.0b38c"
            ]
        ]
    },
    {
        "id": "7f0848c2.7a5778",
        "type": "json",
        "z": "b7153556.38f63",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 430,
        "y": 280,
        "wires": [
            [
                "a74d8921.e4deb"
            ]
        ]
    },
    {
        "id": "4838bf50.4b66a",
        "type": "json",
        "z": "b7153556.38f63",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 430,
        "y": 320,
        "wires": [
            [
                "a74d8921.e4deb"
            ]
        ]
    },
    {
        "id": "6afc0f8d.e0e418",
        "type": "http response",
        "z": "b7153556.38f63",
        "name": "",
        "statusCode": "200",
        "headers": {
            "Content-Type": "application/json"
        },
        "x": 800,
        "y": 300,
        "wires": []
    },
    {
        "id": "cad1b046.0b38c",
        "type": "function",
        "z": "b7153556.38f63",
        "name": "",
        "func": "msg.payload = msg.payload[1].payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 670,
        "y": 300,
        "wires": [
            [
                "6afc0f8d.e0e418"
            ]
        ]
    },
    {
        "id": "2891b47c.fde94c",
        "type": "function",
        "z": "b7153556.38f63",
        "name": "JsonDisplayLoudness",
        "func": "msg.payload = {loudness: msg.payload * 114 / 1023 - 48};\nmsg.parts = 1;\nmsg.topic = \"1\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 260,
        "y": 280,
        "wires": [
            [
                "7f0848c2.7a5778"
            ]
        ]
    },
    {
        "id": "8bb94c8e.06df28",
        "type": "function",
        "z": "b7153556.38f63",
        "name": "publishSocketMessages",
        "func": "msg.payload = {loudness: msg.payload * 114 / 1023 - 48};\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 270,
        "y": 240,
        "wires": [
            [
                "89664769.054fd8"
            ]
        ]
    },
    {
        "id": "2398fb04.a264c4",
        "type": "grove digital sensor",
        "z": "b7153556.38f63",
        "name": "T/H",
        "board": "4ad1dd1c.23a9cc",
        "sensor": "dht22",
        "repeat": "1",
        "pin": "3",
        "x": 70,
        "y": 440,
        "wires": [
            [
                "7a72e0fd.c798b",
                "2524bce3.79b9e4"
            ]
        ]
    },
    {
        "id": "ee26043.f2acff8",
        "type": "http in",
        "z": "b7153556.38f63",
        "name": "",
        "url": "/temperature",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 380,
        "wires": [
            [
                "2cf652d9.0739ce"
            ]
        ]
    },
    {
        "id": "6ca72533.98b07c",
        "type": "json",
        "z": "b7153556.38f63",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 470,
        "y": 420,
        "wires": [
            [
                "bd35d8c2.4b28c8"
            ]
        ]
    },
    {
        "id": "7eda7485.46612c",
        "type": "http response",
        "z": "b7153556.38f63",
        "name": "",
        "statusCode": "200",
        "headers": {
            "Content-Type": "application/json",
            "Access-Control-Allow-Origin": "*",
            "Access-Control-Allow-Methods": "POST, GET, OPTIONS"
        },
        "x": 840,
        "y": 380,
        "wires": []
    },
    {
        "id": "7a72e0fd.c798b",
        "type": "function",
        "z": "b7153556.38f63",
        "name": "JsonTemperature",
        "func": "msg.payload = {temperature: msg.payload.temperature};\nmsg.parts = 1;\nmsg.topic = \"1\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 310,
        "y": 420,
        "wires": [
            [
                "6ca72533.98b07c"
            ]
        ]
    },
    {
        "id": "bd35d8c2.4b28c8",
        "type": "join",
        "z": "b7153556.38f63",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "",
        "propertyType": "full",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 590,
        "y": 380,
        "wires": [
            [
                "c507bf90.c862f"
            ]
        ]
    },
    {
        "id": "c507bf90.c862f",
        "type": "function",
        "z": "b7153556.38f63",
        "name": "",
        "func": "msg.payload = msg.payload[1].payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 710,
        "y": 380,
        "wires": [
            [
                "7eda7485.46612c"
            ]
        ]
    },
    {
        "id": "2cf652d9.0739ce",
        "type": "function",
        "z": "b7153556.38f63",
        "name": "GetRequest",
        "func": "msg.parts = 2;\nmsg.topic = \"2\";\nmsg.complete = true\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 290,
        "y": 380,
        "wires": [
            [
                "77430fa0.a5a5"
            ]
        ]
    },
    {
        "id": "306f45a3.6531fa",
        "type": "http in",
        "z": "b7153556.38f63",
        "name": "",
        "url": "/humidity",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 500,
        "wires": [
            [
                "776c4ff7.6f739"
            ]
        ]
    },
    {
        "id": "776c4ff7.6f739",
        "type": "function",
        "z": "b7153556.38f63",
        "name": "GetRequest",
        "func": "msg.parts = 2;\nmsg.topic = \"2\";\nmsg.complete = true\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 290,
        "y": 500,
        "wires": [
            [
                "a90ace65.1426f"
            ]
        ]
    },
    {
        "id": "2524bce3.79b9e4",
        "type": "function",
        "z": "b7153556.38f63",
        "name": "JsonHumidity",
        "func": "msg.payload = {humidity: msg.payload.humidity};\nmsg.parts = 1;\nmsg.topic = \"1\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 300,
        "y": 460,
        "wires": [
            [
                "366288cf.f84da8"
            ]
        ]
    },
    {
        "id": "a90ace65.1426f",
        "type": "json",
        "z": "b7153556.38f63",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 470,
        "y": 500,
        "wires": [
            [
                "b200f3b9.1c5e58"
            ]
        ]
    },
    {
        "id": "b200f3b9.1c5e58",
        "type": "join",
        "z": "b7153556.38f63",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "",
        "propertyType": "full",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 590,
        "y": 500,
        "wires": [
            [
                "dab0b264.9419b8"
            ]
        ]
    },
    {
        "id": "dab0b264.9419b8",
        "type": "function",
        "z": "b7153556.38f63",
        "name": "",
        "func": "msg.payload = msg.payload[1].payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 710,
        "y": 500,
        "wires": [
            [
                "82f787bd.aab95"
            ]
        ]
    },
    {
        "id": "82f787bd.aab95",
        "type": "http response",
        "z": "b7153556.38f63",
        "name": "",
        "statusCode": "200",
        "headers": {
            "Content-Type": "application/json"
        },
        "x": 840,
        "y": 500,
        "wires": []
    },
    {
        "id": "5a43a4ef.a7f3e4",
        "type": "http in",
        "z": "b7153556.38f63",
        "name": "",
        "url": "/play/sound",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 580,
        "wires": [
            [
                "b6dd6346.36a8e"
            ]
        ]
    },
    {
        "id": "b6dd6346.36a8e",
        "type": "function",
        "z": "b7153556.38f63",
        "name": "Get Video ID",
        "func": "msg.payload = msg.payload.id;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 310,
        "y": 580,
        "wires": [
            [
                "d0ccbda6.344c88",
                "5acfc4fa.6c2754"
            ]
        ]
    },
    {
        "id": "f3b77222.7a1e58",
        "type": "http response",
        "z": "b7153556.38f63",
        "name": "",
        "statusCode": "200",
        "headers": {
            "Content-Type": "application/json"
        },
        "x": 700,
        "y": 580,
        "wires": []
    },
    {
        "id": "d0ccbda6.344c88",
        "type": "function",
        "z": "b7153556.38f63",
        "name": "Response status ok",
        "func": "msg.payload = {};\nmsg.status = \"ok\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 520,
        "y": 580,
        "wires": [
            [
                "f3b77222.7a1e58"
            ]
        ]
    },
    {
        "id": "ea4324ab.6f2778",
        "type": "grove digital output",
        "z": "b7153556.38f63",
        "name": "Buzz",
        "board": "78a75072.fedf68",
        "pin": "2",
        "x": 460,
        "y": 1450,
        "wires": []
    },
    {
        "id": "f5fd8f46.d1a41",
        "type": "json",
        "z": "b7153556.38f63",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 630,
        "y": 60,
        "wires": [
            [
                "4fc37484.10d9d4"
            ]
        ]
    },
    {
        "id": "4fc37484.10d9d4",
        "type": "mqtt out",
        "z": "b7153556.38f63",
        "name": "Send Acceleration MQTT Event",
        "topic": "acceleration",
        "qos": "2",
        "retain": "",
        "broker": "914bdd80.272ee",
        "x": 830,
        "y": 60,
        "wires": []
    },
    {
        "id": "3b8199b6.0d5e9e",
        "type": "http in",
        "z": "b7153556.38f63",
        "name": "",
        "url": "/play/mute",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 880,
        "wires": [
            [
                "2bb2c4f2.11a9dc",
                "93d8b7d1.eae2b8"
            ]
        ]
    },
    {
        "id": "2bb2c4f2.11a9dc",
        "type": "exec",
        "z": "b7153556.38f63",
        "command": "./tune.sh m",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 270,
        "y": 920,
        "wires": [
            [
                "a374c243.d3baa8"
            ],
            [],
            []
        ]
    },
    {
        "id": "89664769.054fd8",
        "type": "json",
        "z": "b7153556.38f63",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 450,
        "y": 240,
        "wires": [
            [
                "e41ad479.fd5d8"
            ]
        ]
    },
    {
        "id": "e41ad479.fd5d8",
        "type": "mqtt out",
        "z": "b7153556.38f63",
        "name": "Send Loudness MQTT Event",
        "topic": "loudness",
        "qos": "2",
        "retain": "",
        "broker": "914bdd80.272ee",
        "x": 650,
        "y": 240,
        "wires": []
    },
    {
        "id": "64c8e4e3.9e881c",
        "type": "http in",
        "z": "b7153556.38f63",
        "name": "",
        "url": "/play/unmute",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 980,
        "wires": [
            [
                "3ce42d6d.9824ba",
                "d72e6194.9a91f8"
            ]
        ]
    },
    {
        "id": "3ce42d6d.9824ba",
        "type": "exec",
        "z": "b7153556.38f63",
        "command": "./tune.sh um",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 300,
        "y": 1020,
        "wires": [
            [
                "b98c6564.bd9bf"
            ],
            [],
            []
        ]
    },
    {
        "id": "60ca0c3e.89315c",
        "type": "http in",
        "z": "b7153556.38f63",
        "name": "",
        "url": "/play/volume_down",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 1200,
        "wires": [
            [
                "eb8aa05b.24f698"
            ]
        ]
    },
    {
        "id": "eb8aa05b.24f698",
        "type": "exec",
        "z": "b7153556.38f63",
        "command": "./tune.sh dv 10",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 340,
        "y": 1240,
        "wires": [
            [
                "fffbbfd0.f452e"
            ],
            [],
            []
        ]
    },
    {
        "id": "a881389f.ec0ae",
        "type": "http in",
        "z": "b7153556.38f63",
        "name": "",
        "url": "/play/volume_up",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 1080,
        "wires": [
            [
                "cef02ce8.05e86",
                "ab673238.02d558"
            ]
        ]
    },
    {
        "id": "cef02ce8.05e86",
        "type": "exec",
        "z": "b7153556.38f63",
        "command": "./tune.sh uv 10",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 320,
        "y": 1120,
        "wires": [
            [
                "c00c98e9.6ae7f8"
            ],
            [],
            []
        ]
    },
    {
        "id": "7d13a455.021b64",
        "type": "http response",
        "z": "b7153556.38f63",
        "name": "",
        "statusCode": "200",
        "headers": {
            "Content-Type": "application/json"
        },
        "x": 1140,
        "y": 1080,
        "wires": []
    },
    {
        "id": "4027234b.66fdb4",
        "type": "function",
        "z": "b7153556.38f63",
        "name": "Response status ok",
        "func": "msg.status = \"ok\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 960,
        "y": 1080,
        "wires": [
            [
                "7d13a455.021b64"
            ]
        ]
    },
    {
        "id": "158b0e58.aaebba",
        "type": "http in",
        "z": "b7153556.38f63",
        "name": "",
        "url": "/play/stream",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 680,
        "wires": [
            [
                "b727e596.9ff388"
            ]
        ]
    },
    {
        "id": "29d3f11.c90538e",
        "type": "exec",
        "z": "b7153556.38f63",
        "command": "./play_stream_sound.sh ",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 550,
        "y": 720,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "b727e596.9ff388",
        "type": "function",
        "z": "b7153556.38f63",
        "name": "Get Stream URL",
        "func": "msg.payload = msg.payload.url;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 320,
        "y": 680,
        "wires": [
            [
                "29d3f11.c90538e",
                "3cc07c7a.e4fdac"
            ]
        ]
    },
    {
        "id": "3d3371be.34796e",
        "type": "http response",
        "z": "b7153556.38f63",
        "name": "",
        "statusCode": "200",
        "headers": {
            "Content-Type": "application/json"
        },
        "x": 720,
        "y": 680,
        "wires": []
    },
    {
        "id": "3cc07c7a.e4fdac",
        "type": "function",
        "z": "b7153556.38f63",
        "name": "Response status ok",
        "func": "msg.payload = {};\nmsg.status = \"ok\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 540,
        "y": 680,
        "wires": [
            [
                "3d3371be.34796e"
            ]
        ]
    },
    {
        "id": "1c9961a2.959efe",
        "type": "http in",
        "z": "b7153556.38f63",
        "name": "",
        "url": "/play/stop",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 780,
        "wires": [
            [
                "fcc59833.c5766",
                "9e43736a.9b57"
            ]
        ]
    },
    {
        "id": "9e43736a.9b57",
        "type": "exec",
        "z": "b7153556.38f63",
        "command": "./stop_sound.sh ",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 330,
        "y": 820,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "af6d23ea.28b15",
        "type": "http response",
        "z": "b7153556.38f63",
        "name": "",
        "statusCode": "200",
        "headers": {
            "Content-Type": "application/json"
        },
        "x": 520,
        "y": 780,
        "wires": []
    },
    {
        "id": "fcc59833.c5766",
        "type": "function",
        "z": "b7153556.38f63",
        "name": "Response status ok",
        "func": "msg.payload = {};\nmsg.status = \"ok\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 340,
        "y": 780,
        "wires": [
            [
                "af6d23ea.28b15"
            ]
        ]
    },
    {
        "id": "5acfc4fa.6c2754",
        "type": "exec",
        "z": "b7153556.38f63",
        "command": "./play_youtube_sound.sh ",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 530,
        "y": 620,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "83110bd9.28819",
        "type": "http in",
        "z": "b7153556.38f63",
        "name": "",
        "url": "/buzz",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 1390,
        "wires": [
            [
                "a249f706.223b28",
                "dbf81f45.ffa57",
                "c107dd8c.6fec6"
            ]
        ]
    },
    {
        "id": "a249f706.223b28",
        "type": "function",
        "z": "b7153556.38f63",
        "name": "Response status ok",
        "func": "msg.status = \"ok\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 330,
        "y": 1390,
        "wires": [
            [
                "ed8fadc4.f35dc8"
            ]
        ]
    },
    {
        "id": "ed8fadc4.f35dc8",
        "type": "http response",
        "z": "b7153556.38f63",
        "name": "",
        "statusCode": "200",
        "headers": {
            "Content-Type": "application/json"
        },
        "x": 530,
        "y": 1390,
        "wires": []
    },
    {
        "id": "dbf81f45.ffa57",
        "type": "function",
        "z": "b7153556.38f63",
        "name": "On",
        "func": "msg = { payload : true };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 280,
        "y": 1430,
        "wires": [
            [
                "ea4324ab.6f2778"
            ]
        ]
    },
    {
        "id": "c107dd8c.6fec6",
        "type": "function",
        "z": "b7153556.38f63",
        "name": "TimeoutOff",
        "func": "setTimeout(function(){\n    msg = { payload : false };\n    node.send(msg);\n}, 2000);",
        "outputs": 1,
        "noerr": 0,
        "x": 300,
        "y": 1470,
        "wires": [
            [
                "ea4324ab.6f2778"
            ]
        ]
    },
    {
        "id": "ab673238.02d558",
        "type": "join",
        "z": "b7153556.38f63",
        "name": "",
        "mode": "custom",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 790,
        "y": 1080,
        "wires": [
            [
                "4027234b.66fdb4"
            ]
        ]
    },
    {
        "id": "c00c98e9.6ae7f8",
        "type": "function",
        "z": "b7153556.38f63",
        "name": "Parse volume level",
        "func": "let results = msg.payload.split(\"\\n\");\nmsg.payload = { volume: results[0], muted: results[1]==\"off\" };\nmsg.complete = true;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 1120,
        "wires": [
            [
                "f586d526.74135"
            ]
        ]
    },
    {
        "id": "f586d526.74135",
        "type": "json",
        "z": "b7153556.38f63",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 670,
        "y": 1120,
        "wires": [
            [
                "ab673238.02d558"
            ]
        ]
    },
    {
        "id": "a109f55e.4899e",
        "type": "function",
        "z": "b7153556.38f63",
        "name": "publishSocketMessagesWithThreshold",
        "func": "var loud = flow.get('loud')||0;\nvar current = msg.payload * 114 / 1023 - 48;\nflow.set('loud',current);\nvar thresh = (flow.get('loudThreshold') / 100);\nif (current * (1 + thresh) > loud || current * (1 - thresh) < loud){\n    msg.payload = {loudness: current};\n    return msg\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 320,
        "y": 200,
        "wires": [
            [
                "5e45c0ad.c1684"
            ]
        ]
    },
    {
        "id": "5e45c0ad.c1684",
        "type": "json",
        "z": "b7153556.38f63",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 560,
        "y": 200,
        "wires": [
            [
                "ad3711d.2c6dc7"
            ]
        ]
    },
    {
        "id": "ad3711d.2c6dc7",
        "type": "mqtt out",
        "z": "b7153556.38f63",
        "name": "Send Loudness On Change MQTT Event",
        "topic": "loudness_on_change",
        "qos": "2",
        "retain": "",
        "broker": "914bdd80.272ee",
        "x": 800,
        "y": 200,
        "wires": []
    },
    {
        "id": "42ffe0ff.c752c",
        "type": "http response",
        "z": "b7153556.38f63",
        "name": "",
        "statusCode": "200",
        "headers": {
            "Content-Type": "application/json"
        },
        "x": 1160,
        "y": 1200,
        "wires": []
    },
    {
        "id": "a718e488.7112c8",
        "type": "function",
        "z": "b7153556.38f63",
        "name": "Response status ok",
        "func": "msg.status = \"ok\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 990,
        "y": 1200,
        "wires": [
            [
                "42ffe0ff.c752c"
            ]
        ]
    },
    {
        "id": "e2008758.f27cf8",
        "type": "join",
        "z": "b7153556.38f63",
        "name": "",
        "mode": "custom",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 810,
        "y": 1200,
        "wires": [
            [
                "a718e488.7112c8"
            ]
        ]
    },
    {
        "id": "fffbbfd0.f452e",
        "type": "function",
        "z": "b7153556.38f63",
        "name": "Parse volume level",
        "func": "let results = msg.payload.split(\"\\n\");\nmsg.payload = { volume: results[0], muted: results[1]==\"off\" };\nmsg.complete = true;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 530,
        "y": 1240,
        "wires": [
            [
                "730b909e.ff0ae"
            ]
        ]
    },
    {
        "id": "730b909e.ff0ae",
        "type": "json",
        "z": "b7153556.38f63",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 690,
        "y": 1240,
        "wires": [
            [
                "e2008758.f27cf8"
            ]
        ]
    },
    {
        "id": "67c3aafa.c8d2f4",
        "type": "http response",
        "z": "b7153556.38f63",
        "name": "",
        "statusCode": "200",
        "headers": {
            "Content-Type": "application/json"
        },
        "x": 1080,
        "y": 880,
        "wires": []
    },
    {
        "id": "6623c4f7.ca0eac",
        "type": "function",
        "z": "b7153556.38f63",
        "name": "Response status ok",
        "func": "msg.status = \"ok\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 900,
        "y": 880,
        "wires": [
            [
                "67c3aafa.c8d2f4"
            ]
        ]
    },
    {
        "id": "93d8b7d1.eae2b8",
        "type": "join",
        "z": "b7153556.38f63",
        "name": "",
        "mode": "custom",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 730,
        "y": 880,
        "wires": [
            [
                "6623c4f7.ca0eac"
            ]
        ]
    },
    {
        "id": "a374c243.d3baa8",
        "type": "function",
        "z": "b7153556.38f63",
        "name": "Parse volume level",
        "func": "let results = msg.payload.split(\"\\n\");\nmsg.payload = { volume: results[0], muted: results[1]==\"off\" };\nmsg.complete = true;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 450,
        "y": 920,
        "wires": [
            [
                "f959ebff.ec687"
            ]
        ]
    },
    {
        "id": "f959ebff.ec687",
        "type": "json",
        "z": "b7153556.38f63",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 610,
        "y": 920,
        "wires": [
            [
                "93d8b7d1.eae2b8"
            ]
        ]
    },
    {
        "id": "33547d88.17e582",
        "type": "http response",
        "z": "b7153556.38f63",
        "name": "",
        "statusCode": "200",
        "headers": {
            "Content-Type": "application/json"
        },
        "x": 1120,
        "y": 980,
        "wires": []
    },
    {
        "id": "3b0f0cb6.b1eef4",
        "type": "function",
        "z": "b7153556.38f63",
        "name": "Response status ok",
        "func": "msg.status = \"ok\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 940,
        "y": 980,
        "wires": [
            [
                "33547d88.17e582"
            ]
        ]
    },
    {
        "id": "d72e6194.9a91f8",
        "type": "join",
        "z": "b7153556.38f63",
        "name": "",
        "mode": "custom",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 770,
        "y": 980,
        "wires": [
            [
                "3b0f0cb6.b1eef4"
            ]
        ]
    },
    {
        "id": "b98c6564.bd9bf",
        "type": "function",
        "z": "b7153556.38f63",
        "name": "Parse volume level",
        "func": "let results = msg.payload.split(\"\\n\");\nmsg.payload = { volume: results[0], muted: results[1]==\"off\" };\nmsg.complete = true;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 490,
        "y": 1020,
        "wires": [
            [
                "ac4907c2.062ac8"
            ]
        ]
    },
    {
        "id": "ac4907c2.062ac8",
        "type": "json",
        "z": "b7153556.38f63",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 650,
        "y": 1020,
        "wires": [
            [
                "d72e6194.9a91f8"
            ]
        ]
    },
    {
        "id": "a3bb75a3.ab9348",
        "type": "http in",
        "z": "b7153556.38f63",
        "name": "",
        "url": "/loudness/threshold",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 1520,
        "wires": [
            [
                "d59fead9.ece998"
            ]
        ]
    },
    {
        "id": "d59fead9.ece998",
        "type": "function",
        "z": "b7153556.38f63",
        "name": "Change threshold",
        "func": "if(msg.payload.threshold > 0 && msg.payload.threshold < 100){\n    flow.set('loudThreshold',msg.payload.threshold);\n}\nmsg.payload = msg.payload.threshold;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 390,
        "y": 1520,
        "wires": [
            [
                "e325fa17.f12018"
            ]
        ]
    },
    {
        "id": "23008558.b95e4a",
        "type": "http response",
        "z": "b7153556.38f63",
        "name": "",
        "statusCode": "200",
        "headers": {
            "Content-Type": "application/json"
        },
        "x": 700,
        "y": 1480,
        "wires": []
    },
    {
        "id": "d845599d.09a2c",
        "type": "http in",
        "z": "b7153556.38f63",
        "name": "",
        "url": "/play/volume",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 1290,
        "wires": [
            [
                "665c693c.35f048"
            ]
        ]
    },
    {
        "id": "665c693c.35f048",
        "type": "exec",
        "z": "b7153556.38f63",
        "command": "./tune.sh",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 250,
        "y": 1330,
        "wires": [
            [
                "10bffd4a.bab4a3"
            ],
            [],
            []
        ]
    },
    {
        "id": "7fb5f7f0.f17128",
        "type": "http response",
        "z": "b7153556.38f63",
        "name": "",
        "statusCode": "200",
        "headers": {
            "Content-Type": "application/json"
        },
        "x": 1050,
        "y": 1290,
        "wires": []
    },
    {
        "id": "7ab63f02.a3ac98",
        "type": "function",
        "z": "b7153556.38f63",
        "name": "Response status ok",
        "func": "msg.status = \"ok\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 870,
        "y": 1290,
        "wires": [
            [
                "7fb5f7f0.f17128"
            ]
        ]
    },
    {
        "id": "10bffd4a.bab4a3",
        "type": "function",
        "z": "b7153556.38f63",
        "name": "Parse volume level",
        "func": "let results = msg.payload.split(\"\\n\");\nmsg.payload = { volume: results[0], muted: results[1]==\"off\" };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 420,
        "y": 1320,
        "wires": [
            [
                "16dbc36a.ceef7d"
            ]
        ]
    },
    {
        "id": "16dbc36a.ceef7d",
        "type": "json",
        "z": "b7153556.38f63",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 590,
        "y": 1320,
        "wires": [
            [
                "7ab63f02.a3ac98"
            ]
        ]
    },
    {
        "id": "356d362e.4becb2",
        "type": "http response",
        "z": "b7153556.38f63",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 700,
        "y": 1560,
        "wires": []
    },
    {
        "id": "e325fa17.f12018",
        "type": "switch",
        "z": "b7153556.38f63",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "btwn",
                "v": "0",
                "vt": "num",
                "v2": "100",
                "v2t": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 570,
        "y": 1520,
        "wires": [
            [
                "23008558.b95e4a"
            ],
            [
                "356d362e.4becb2"
            ]
        ]
    },
    {
        "id": "d70e3d19.6fc7c",
        "type": "http in",
        "z": "b7153556.38f63",
        "name": "",
        "url": "/loudness/threshold",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 1600,
        "wires": [
            [
                "c21b9ed0.8b397"
            ]
        ]
    },
    {
        "id": "c21b9ed0.8b397",
        "type": "function",
        "z": "b7153556.38f63",
        "name": "Get threshold",
        "func": "msg.payload = flow.get('loudThreshold');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 380,
        "y": 1600,
        "wires": [
            [
                "621f96f0.bc80e8"
            ]
        ]
    },
    {
        "id": "621f96f0.bc80e8",
        "type": "json",
        "z": "b7153556.38f63",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 580,
        "y": 1600,
        "wires": [
            [
                "4ec34b73.c9a834"
            ]
        ]
    },
    {
        "id": "3933c21e.7c14a6",
        "type": "http response",
        "z": "b7153556.38f63",
        "name": "",
        "statusCode": "200",
        "headers": {
            "Content-Type": "application/json"
        },
        "x": 940,
        "y": 1600,
        "wires": []
    },
    {
        "id": "4ec34b73.c9a834",
        "type": "function",
        "z": "b7153556.38f63",
        "name": "Response status ok",
        "func": "msg.status = \"ok\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 760,
        "y": 1600,
        "wires": [
            [
                "3933c21e.7c14a6"
            ]
        ]
    },
    {
        "id": "77430fa0.a5a5",
        "type": "json",
        "z": "b7153556.38f63",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 450,
        "y": 380,
        "wires": [
            [
                "bd35d8c2.4b28c8"
            ]
        ]
    },
    {
        "id": "366288cf.f84da8",
        "type": "json",
        "z": "b7153556.38f63",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 470,
        "y": 460,
        "wires": [
            [
                "b200f3b9.1c5e58"
            ]
        ]
    },
    {
        "id": "8de85728.da065",
        "type": "http in",
        "z": "b7153556.38f63",
        "name": "",
        "url": "/interface/index.html",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 1700,
        "wires": [
            [
                "f806b02.3782ad"
            ]
        ]
    },
    {
        "id": "f806b02.3782ad",
        "type": "file in",
        "z": "b7153556.38f63",
        "name": "",
        "filename": "/home/pi/client-github/ocs-coussin-connecte/index.html",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "x": 470,
        "y": 1700,
        "wires": [
            [
                "cac42df.5d1595"
            ]
        ]
    },
    {
        "id": "cac42df.5d1595",
        "type": "http response",
        "z": "b7153556.38f63",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 760,
        "y": 1700,
        "wires": []
    },
    {
        "id": "7bdca294.dff89c",
        "type": "http in",
        "z": "b7153556.38f63",
        "name": "",
        "url": "/interface/edit.html",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 1740,
        "wires": [
            [
                "ff32763a.982158"
            ]
        ]
    },
    {
        "id": "ff32763a.982158",
        "type": "file in",
        "z": "b7153556.38f63",
        "name": "",
        "filename": "/home/pi/client-github/ocs-coussin-connecte/edit.html",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "x": 460,
        "y": 1740,
        "wires": [
            [
                "3900ee93.fd8252"
            ]
        ]
    },
    {
        "id": "3900ee93.fd8252",
        "type": "http response",
        "z": "b7153556.38f63",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 740,
        "y": 1740,
        "wires": []
    },
    {
        "id": "16a43899.1cb5bf",
        "type": "http in",
        "z": "b7153556.38f63",
        "name": "",
        "url": "/interface/dashboard.html",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 1780,
        "wires": [
            [
                "43290015.b7a59"
            ]
        ]
    },
    {
        "id": "43290015.b7a59",
        "type": "file in",
        "z": "b7153556.38f63",
        "name": "",
        "filename": "/home/pi/client-github/ocs-coussin-connecte/dashboard.html",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "x": 520,
        "y": 1780,
        "wires": [
            [
                "376fd693.283232"
            ]
        ]
    },
    {
        "id": "376fd693.283232",
        "type": "http response",
        "z": "b7153556.38f63",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 820,
        "y": 1780,
        "wires": []
    },
    {
        "id": "d7862485.c4fdd",
        "type": "http in",
        "z": "b7153556.38f63",
        "name": "",
        "url": "/interface/js/createChart.js",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 1820,
        "wires": [
            [
                "87ec9b7d.94b5a8"
            ]
        ]
    },
    {
        "id": "87ec9b7d.94b5a8",
        "type": "file in",
        "z": "b7153556.38f63",
        "name": "",
        "filename": "/home/pi/client-github/ocs-coussin-connecte/js/createChart.js",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "x": 530,
        "y": 1820,
        "wires": [
            [
                "7161644b.88c8ac"
            ]
        ]
    },
    {
        "id": "7161644b.88c8ac",
        "type": "http response",
        "z": "b7153556.38f63",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 840,
        "y": 1820,
        "wires": []
    },
    {
        "id": "54514375.d7da44",
        "type": "http in",
        "z": "b7153556.38f63",
        "name": "",
        "url": "/wifi/add",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 1900,
        "wires": [
            [
                "f14dbc98.fceb4"
            ]
        ]
    },
    {
        "id": "f14dbc98.fceb4",
        "type": "function",
        "z": "b7153556.38f63",
        "name": "Get SSID and Pass",
        "func": "msg.payload = msg.payload.ssid + \" \" + msg.payload.psk;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 310,
        "y": 1900,
        "wires": [
            [
                "7e18b156.761f38",
                "fec3cbcb.2b6fc8"
            ]
        ]
    },
    {
        "id": "7e18b156.761f38",
        "type": "function",
        "z": "b7153556.38f63",
        "name": "Response status ok",
        "func": "msg.payload = {};\nmsg.status = \"ok\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 540,
        "y": 1900,
        "wires": [
            [
                "cab0b7f2.3a87c8"
            ]
        ]
    },
    {
        "id": "cab0b7f2.3a87c8",
        "type": "http response",
        "z": "b7153556.38f63",
        "name": "",
        "statusCode": "200",
        "headers": {
            "Content-Type": "application/json"
        },
        "x": 780,
        "y": 1900,
        "wires": []
    },
    {
        "id": "fec3cbcb.2b6fc8",
        "type": "exec",
        "z": "b7153556.38f63",
        "command": "sudo ./add_new_network.sh ",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 560,
        "y": 1960,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "97797e56.068218",
        "type": "http in",
        "z": "b7153556.38f63",
        "name": "",
        "url": "/wifi/reset",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 2020,
        "wires": [
            [
                "30bdc184.bdcb66",
                "52cd8069.33f118"
            ]
        ]
    },
    {
        "id": "30bdc184.bdcb66",
        "type": "function",
        "z": "b7153556.38f63",
        "name": "Response status ok",
        "func": "msg.payload = {};\nmsg.status = \"ok\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 320,
        "y": 2020,
        "wires": [
            [
                "46e1086f.db1058"
            ]
        ]
    },
    {
        "id": "46e1086f.db1058",
        "type": "http response",
        "z": "b7153556.38f63",
        "name": "",
        "statusCode": "200",
        "headers": {
            "Content-Type": "application/json"
        },
        "x": 520,
        "y": 2020,
        "wires": []
    },
    {
        "id": "52cd8069.33f118",
        "type": "exec",
        "z": "b7153556.38f63",
        "command": "sudo ./reset_networks.sh",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 330,
        "y": 2080,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "78a75072.fedf68",
        "type": "board-config",
        "z": "",
        "board": "GrovePi"
    },
    {
        "id": "4ad1dd1c.23a9cc",
        "type": "board-config",
        "z": "",
        "board": "GrovePi"
    },
    {
        "id": "914bdd80.272ee",
        "type": "mqtt-broker",
        "z": "",
        "name": "Raspberry Pi Mosquito MQTT Server",
        "broker": "192.168.1.195",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    }
]